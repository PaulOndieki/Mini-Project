{"ast":null,"code":"var _jsxFileName = \"/home/user/REACT/bookshelf-app/src/components/BookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { addBook, updateBook } from '../api';\n\n// Handles the form for adding and editing books\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookForm = ({\n  selectedBook,\n  onSuccess\n}) => {\n  _s();\n  const [book, setBook] = useState({\n    title: '',\n    author: ''\n  });\n\n  // If a book is selected, load it into form\n  useEffect(() => {\n    if (selectedBook) {\n      setBook(selectedBook);\n    }\n  }, [selectedBook]);\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBook({\n      ...book,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (book.id) {\n      await updateBook(book);\n    } else {\n      await addBook(book);\n    }\n    setBook({\n      title: '',\n      author: ''\n    });\n    onSuccess(); // Notify parent to reload list\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.id ? 'Edit Book' : 'Add Book'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: book.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"author\",\n      placeholder: \"Author\",\n      value: book.author,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: book.id ? 'Update' : 'Add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BookForm, \"P79wo4+eBc2dHBx01avMU9ilsL0=\");\n_c = BookForm;\nexport default BookForm;\nvar _c;\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"names":["React","useState","useEffect","addBook","updateBook","jsxDEV","_jsxDEV","BookForm","selectedBook","onSuccess","_s","book","setBook","title","author","handleChange","e","name","value","target","handleSubmit","preventDefault","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","type","_c","$RefreshReg$"],"sources":["/home/user/REACT/bookshelf-app/src/components/BookForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { addBook, updateBook } from '../api';\n\n// Handles the form for adding and editing books\nconst BookForm = ({ selectedBook, onSuccess }) => {\n  const [book, setBook] = useState({ title: '', author: '' });\n\n  // If a book is selected, load it into form\n  useEffect(() => {\n    if (selectedBook) {\n      setBook(selectedBook);\n    }\n  }, [selectedBook]);\n\n  // Handle form field changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setBook({ ...book, [name]: value });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (book.id) {\n      await updateBook(book);\n    } else {\n      await addBook(book);\n    }\n    setBook({ title: '', author: '' });\n    onSuccess(); // Notify parent to reload list\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>{book.id ? 'Edit Book' : 'Add Book'}</h2>\n      <input\n        name=\"title\"\n        placeholder=\"Title\"\n        value={book.title}\n        onChange={handleChange}\n        required\n      />\n      <input\n        name=\"author\"\n        placeholder=\"Author\"\n        value={book.author}\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">{book.id ? 'Update' : 'Add'}</button>\n    </form>\n  );\n};\n\nexport default BookForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,UAAU,QAAQ,QAAQ;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAAEY,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;;EAE3D;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,EAAE;MAChBI,OAAO,CAACJ,YAAY,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIV,IAAI,CAACW,EAAE,EAAE;MACX,MAAMlB,UAAU,CAACO,IAAI,CAAC;IACxB,CAAC,MAAM;MACL,MAAMR,OAAO,CAACQ,IAAI,CAAC;IACrB;IACAC,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;IAClCL,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACEH,OAAA;IAAMiB,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3BlB,OAAA;MAAAkB,QAAA,EAAKb,IAAI,CAACW,EAAE,GAAG,WAAW,GAAG;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CtB,OAAA;MACEW,IAAI,EAAC,OAAO;MACZY,WAAW,EAAC,OAAO;MACnBX,KAAK,EAAEP,IAAI,CAACE,KAAM;MAClBiB,QAAQ,EAAEf,YAAa;MACvBgB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFtB,OAAA;MACEW,IAAI,EAAC,QAAQ;MACbY,WAAW,EAAC,QAAQ;MACpBX,KAAK,EAAEP,IAAI,CAACG,MAAO;MACnBgB,QAAQ,EAAEf,YAAa;MACvBgB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFtB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAEb,IAAI,CAACW,EAAE,GAAG,QAAQ,GAAG;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEX,CAAC;AAAClB,EAAA,CAhDIH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}